{
  "version": 3,
  "sources": ["../src/index.ts", "../src/modules/ticker.ts"],
  "sourcesContent": ["import express from 'express'\nimport http from 'http'\nimport { Server } from 'socket.io'\nimport cors from 'cors'\n\nimport { tick } from './modules/ticker'\n\nconst app = express()\napp.use(cors())\nconst server = http.createServer(app)\n\nconst io = new Server(server, {\n    cors: {\n        origin: \"http://localhost:8080\",\n        methods: [\"GET\", \"POST\"]\n    }\n})\n\ntick()\n\nio.on('connection', (socket) => {\n    console.log(`User connect ${socket.id}`)\n\n    socket.on('client', (data) => {\n        console.log('Message received - topic: client - message:')\n        console.log(data)\n        console.log('emitting...')\n        socket.emit('dada', {\n            message: 'Server message'\n        })\n        console.log('emitted')\n    })\n\n})\n\nserver.listen(3000, () => {\n    console.log('[SERVER] - Running at port 3000')\n})\n", "const subscribers = []\nconst interval = 1000\n\nlet count: number = 0\nconst shouldTick: boolean = true\n\nsetInterval(() => {\n    console.log(`ticking => ${count}`)\n    count++\n\n    if (count > 10) {\n        clearInterval(this)\n        console.log('ticker stopped')\n    }\n}, interval)\n\n\nexport function tick() {\n    console.log('ticked')\n}\n\nexport function subscribe() {}\n\nexport function unsubscribe() {}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,qBAAoB;AACpB,kBAAiB;AACjB,oBAAuB;AACvB,kBAAiB;;;ACFjB,IAAM,WAAW;AAEjB,IAAI,QAAgB;AAGpB,YAAY,MAAM;AACd,UAAQ,IAAI,cAAc,OAAO;AACjC;AAEA,MAAI,QAAQ,IAAI;AACZ,kBAAc,MAAI;AAClB,YAAQ,IAAI,gBAAgB;AAAA,EAChC;AACJ,GAAG,QAAQ;AAGJ,SAAS,OAAO;AACnB,UAAQ,IAAI,QAAQ;AACxB;;;ADZA,IAAM,UAAM,eAAAA,SAAQ;AACpB,IAAI,QAAI,YAAAC,SAAK,CAAC;AACd,IAAM,SAAS,YAAAC,QAAK,aAAa,GAAG;AAEpC,IAAM,KAAK,IAAI,qBAAO,QAAQ;AAAA,EAC1B,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,SAAS,CAAC,OAAO,MAAM;AAAA,EAC3B;AACJ,CAAC;AAED,KAAK;AAEL,GAAG,GAAG,cAAc,CAAC,WAAW;AAC5B,UAAQ,IAAI,gBAAgB,OAAO,IAAI;AAEvC,SAAO,GAAG,UAAU,CAAC,SAAS;AAC1B,YAAQ,IAAI,6CAA6C;AACzD,YAAQ,IAAI,IAAI;AAChB,YAAQ,IAAI,aAAa;AACzB,WAAO,KAAK,QAAQ;AAAA,MAChB,SAAS;AAAA,IACb,CAAC;AACD,YAAQ,IAAI,SAAS;AAAA,EACzB,CAAC;AAEL,CAAC;AAED,OAAO,OAAO,KAAM,MAAM;AACtB,UAAQ,IAAI,iCAAiC;AACjD,CAAC;",
  "names": ["express", "cors", "http"]
}
